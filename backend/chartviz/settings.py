"""
Django settings for chartviz project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
from os import getenv
from os.path import abspath, dirname, join

BASE_DIR = dirname(dirname(abspath(__file__)))
BACKEND_DIR = BASE_DIR
FRONTEND_DIR = join(BACKEND_DIR, '..', 'frontend')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1$0d2)h972r5#^#yq18sanvk1^e^9#jaco=y!r^dl1(%uds+c9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = getenv('DJANGO_ENV') == 'development'

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
]

USE_X_FORWARDED_HOST = True
# On the staging server we run behind a proxy (nginx), which is configured via
#       proxy_set_header X-Forwarded-Protocol $scheme;
# so that it will strip this header from user-agents and append the actual
# scheme.  Otherwise our app does not know if we're running behind https or
# http & so things like HttpRequest.build_absolute_uri will be wrong
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTOCOL', 'https')

# Login settings
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
LOGIN_URL = '/accounts/login/'

# Application definition
ROOT_URLCONF = 'chartviz.urls'

INSTALLED_APPS = [
    # before django.contrib.staticfiles
    'whitenoise.runserver_nostatic',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party
    'django_filters',
    'rest_framework',

    # Provides models and an API for ICD9 and Lab concepts
    'taxonomies',

    # Provides models for recording event occurrences with patients
    'patients',

    # User profiles and extensions
    'accounts',

    # Provides:
    #   - initial data migrations for `taxonomies`
    #   - commands for generating dummy patients, etc
    'initial_data',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,

    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
    ),

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    ),

    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            join(BACKEND_DIR, 'templates'),
            join(FRONTEND_DIR, 'build'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'chartviz.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': getenv('POSTGRES_DB', 'postgres'),
        'USER': getenv('POSTGRES_USER', 'postgres'),
        'HOST': getenv('POSTGRES_HOST', 'db'),
        'PORT': getenv('POSTGRES_PORT', 5432),
        'TEST': {
            'NAME': 'chartviz_testdb',
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
    { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATICFILES_DIRS = [
    join(FRONTEND_DIR, 'build', 'static'),
]

STATICFILES_STORAGE = (
    'whitenoise.storage.CompressedManifestStaticFilesStorage'
)

STATIC_ROOT = join(BACKEND_DIR, 'static')

STATIC_URL = '/static/'

WHITENOISE_ROOT = join(FRONTEND_DIR, 'build', 'root')
